---
layout: post
title:  "[논문리뷰] R-CNN"
date:   2021-07-09 18:00:00 +0900
categories: Paper
---
# R-CNN
1. Localize and Segmentation을 위해 상향식 region proposals 적용 후 CNN에 입력
2. 데이터가 부족한 경우 보조 작업을 supervised 사전 학습과 뒤를 이은 domain-specific fine-tuning을 사용

<center><img src="https://camo.githubusercontent.com/48d7136690ed3bf4b5ffa3251aceed40ffc623f2c3b7ea1ea4b647e9fb65afde/68747470733a2f2f70617065727377697468636f64652e636f6d2f6d656469612f6d6574686f64732f6e65775f73706c6173682d6d6574686f645f4e614139357a572e6a7067" width="500" height=""></center>
1. 입력이미지에 Selective Search 알고리즘을 적용하여 region proposal 2000개 추출    
2. 2K개의 region proposal을 CNN에 적합한 사이즈로 Wrap하여 입력(227 X 227)
3. 사전학습이 된 CNN을 fine tunning하여 사용  
4. 최종적으로 region proposal은 4096차원의 특징 벡터로 추출  
5. 추출된 특징 벡터를 SVM을 이용하여 분류  
6. 마지막으로 bounding box regression을 적용  



## R-CNN 모듈
- Region Proposal
이미지에서 객체를 추출하기 위한 모듈로 selective search 알고리즘을 적용.  
총 2000개의 지역을 추출.  
- Feature Extraction  
추출된 박스는 CNN 모델을 위해 227x227사이즈로 리사이즈(wrap)
Image Classification으로 사전 학습된 CNN모델을 통과하여 4096차원의 특징 벡터로 추출   
CNN모델은 ILSVRC2012 데이터로 사전 학습되었고, fine tune 함. 이때, 실제 Object Detection에 사용할 데이터 셋에서 Ground truth에 해당하는 이미지를 입력  
CNN모델은 5개의 컨볼루션레이어와 2개의 완전 연결 층을 갖고 있음.
__이미지넷으로 사전 학습된 CNN모델을 객체 탐지에 사용할 데이터셋으로 fine tune하여 추출된 지역을 입력 받아 4096차원의 특징 벡터로 추출__

- Classification  
추출된 4096차원의 특징벡터를 SVM으로 분류.

- Non-Maximum Suppression
SVM을 통과하면 각각의 박스들은 해당 클래스에 대한 확률값을 갖게됨.  
동일한 객체에 여러가지 박스가 있을 수 있으니 가장 높은 확률의 박스만 남기고 모두 제거하는 과정.  
여기서 IOU값이 0.5보다 큰 경우에 Non-Maximum Suppression적용.  
- Bounding Box Regression  
예상 객체 지역을 찾는 Selective Search의 성능을 올리기 위해 사용.  
예상 객체의 박스의 이미지 중심점과 너비와 높이에 대해서 Ground truth값과 최대한 동일하게 만들어줘야함.
이미지의 중심점은 그냥 이동시키면 되지만, 너비와 높이의 경우 이미지의 크기에 비례해 조정해아햠.  
위치 조정을 위해 CNN의 pool5레이어의 특징 벡터를 사용.  
추출된 벡터와 중심점, 너비와 높이를 조정하는 함수의 가중치를 곱해 바운딩 박스를 조정.  

  
    

## Reference  
- Ross et al, Rich feature hierarchies for accurate object detection and semantic segmentation, 2014
- [https://yeomko.tistory.com/13][4]
- [https://deep-learning-study.tistory.com/410][3]




[4]: https://yeomko.tistory.com/13
[3]: https://github.com/jekyll/jekyll
